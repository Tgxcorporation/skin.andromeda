<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="VisibleFadeEffect">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarVisibleFadeEffect">
        <animation type="Conditional" reversible="false" condition="[ControlGroup(9900).HasFocus()|ControlGroup(9901).HasFocus()|Control.HasFocus(8998)|Control.HasFocus(8997)]">
            <effect type="slide" start="0,0" end="1920,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="![ControlGroup(9900).HasFocus()|ControlGroup(9901).HasFocus()|Control.HasFocus(8998)|Control.HasFocus(8997)]">
            <effect type="slide" start="1920,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarVisibleFadeEffectDialog">
        <animation type="Conditional" reversible="false" condition="![Window.IsVisible(DialogExtendedProgressBar.xml)|Window.IsVisible(DialogBusy.xml)|Window.IsVisible(DialogNotification.xml)]">
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="[Window.IsVisible(DialogExtendedProgressBar.xml)|Window.IsVisible(DialogBusy.xml)|Window.IsVisible(DialogNotification.xml)]">
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarVisibleFadeEffectOverlay">
        <animation type="Conditional" reversible="false" condition="[ControlGroup(9900).HasFocus()|ControlGroup(9901).HasFocus()|Control.HasFocus(8998)|Control.HasFocus(8997)]">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="![ControlGroup(9900).HasFocus()|ControlGroup(9901).HasFocus()|Control.HasFocus(8998)|Control.HasFocus(8997)]">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarVisibleFadeEffectDialogOverlay">
        <animation type="Conditional" reversible="false" condition="![Window.IsVisible(DialogExtendedProgressBar.xml)|Window.IsVisible(DialogBusy.xml)|Window.IsVisible(DialogNotification.xml)]">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="[Window.IsVisible(DialogExtendedProgressBar.xml)|Window.IsVisible(DialogBusy.xml)|Window.IsVisible(DialogNotification.xml)]">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="HeaderVisibleFadeEffect">
        <animation type="Conditional" reversible="false" condition="![ControlGroup(9900).HasFocus()|ControlGroup(9901).HasFocus()|Control.HasFocus(8998)|Control.HasFocus(8997)]">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="[ControlGroup(9900).HasFocus()|ControlGroup(9901).HasFocus()|Control.HasFocus(8998)|Control.HasFocus(8997)]">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="NotificationVisibleFadeEffect">
        <animation type="WindowOpen" reversible="false">
            <effect type="slide" start="100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="slide" start="0,0" end="100,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="SeekBarVisibleSlideEffect">
        <animation type="Conditional" reversible="true" condition="Window.IsVisible(DialogSeekBar.xml)">
            <effect type="slide" start="0,0" end="0,-50" time="100" delay="0" tween="cubic" easing="inout"/>
        </animation>
    </include>
    <include name="TopDialogVisibleFadeEffect">
        <animation type="WindowOpen" reversible="false">
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopDialogVisibleFadeEffectOverlay">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarOSDOpenClose">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarOSDVisibleFadeEffect">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
    </include>
    <include name="TopBarOSDVisibleFadeEffectOverlay">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="RssVisibleFadeEffect">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="150" tween="circle" easing="inout"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="50" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="ButtonFocusAnimation">
        <animation type="Focus" reversible="false">
            <effect type="slide" start="-3,0" end="0,0" time="150" tween="back" easing="out"/>
        </animation>
    </include>
    <include name="ToggleButtonFocusAnimation">
        <animation type="Focus" reversible="false">
            <effect type="slide" start="-3,0" end="0,0" time="150" tween="back" easing="out"/>
        </animation>
    </include>
    <include name="ButtonWideFocusAnimation">
        <animation type="Focus" reversible="false">
            <effect type="slide" start="-3,0" end="0,0" time="150" tween="back" easing="out"/>
        </animation>
    </include>
    <include name="ListFocusAnimation">
        <animation type="Focus" reversible="false">
            <effect type="slide" start="-10,0" end="0,0" time="150" tween="back" easing="out"/>
        </animation>
    </include>
    <include name="NowPlayingVisibleFadeEffect">
        <animation type="Conditional" reversible="false" condition="Control.isvisible(495678)">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
        <animation type="Conditional" reversible="false" condition="![Control.isvisible(495678)]">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="0,0" end="100,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
    </include>
    <include name="ScrollOffsetLabelVisibleFadeEffect">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="OSDOpenClose">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
    </include>
    <include name="OSDFade">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
    </include>
    <include name="OpenClose">
        <animation type="WindowOpen" reversible="false">
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="OpenCloseVisible">
        <animation type="WindowOpen" reversible="false">
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="OpenCloseOverlay">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="DialogOpenClose">
        <animation type="WindowOpen" reversible="false">
            <effect type="slide" start="-100,0" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="slide" start="0,0" end="-100,0" time="150" delay="0" tween="cubic" easing="inout"/>
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="DialogOpenCloseOverlay">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="PlexbmcFixTrick">
        <animation effect="slide" time="0" start="0,0" end="4000,0" condition="!Window.IsVisible(DialogBusy.xml)">Conditional</animation>
        <!--<animation effect="slide" start="0,500" end="0,0" time="150" delay="0" tween="cubic" easing="inout" condition="!Window.IsVisible(DialogBusy.xml)">Conditional</animation>-->
        <animation effect="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout" condition="!Window.IsVisible(DialogBusy.xml)">Conditional</animation>
        <animation type="WindowClose">
            <effect type="slide" time="0" end="4000,0"/>
        </animation>
        <posx>-4000</posx>
    </include>
    <include name="Icon_Fade">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="Facade_Fade">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" delay="0" tween="circle" easing="inout"/>
            <effect type="slide" start="0,500" end="0,0" time="150" delay="0" tween="cubic" easing="inout"/>
        </animation>
    </include>
    <include name="Overlay_Fade">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="150" tween="sine" easing="inout"/>
            <!--<effect type="slide" start="50,0" end="0,0" time="300" tween="cubic" easing="out"/>-->
        </animation>
    </include>
    <include name="KenBurns">
        <animation effect="zoom" start="110" end="130" center="auto" time="15000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
        <animation effect="slide" start="-10,-10" end="20,20" time="7000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
    </include>
    <include name="Animation_ViewsCDart">
        <animation effect="rotate" end="-360" center="auto" time="5000" loop="true" reversible="false" condition="[[Player.HasAudio|Player.HasVideo] + !Player.Paused]">Conditional</animation>
        <animation effect="rotate" start="0" end="-360" center="auto" time="40000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
    </include>
    <include name="PulseBasicHidden">
        <effect type="slide" start="0,0" end="0,0" time="1500" delay="3500"/>
        <effect type="fade" start="0" end="100" time="500" delay="3000"/>
    </include>
    <include name="PulseBasicVisible">
        <effect type="slide" start="0,0" end="0,0" time="1500" delay="3500"/>
        <effect type="fade" start="100" end="0" time="500" delay="3000"/>
    </include>
    <include name="PulseThumb">
        <animation type="Conditional" pulse="true" reversible="false"
                   condition="Skin.HasSetting(EnableCdArt)
                                +!String.IsEmpty(ListItem.Thumb)
                                +!ListItem.IsParentFolder
                                +!Skin.HasSetting(plexbmc)
                                +[
                                    [[!String.IsEmpty(ListItem.Art(poster))|!String.IsEmpty(ListItem.Art(discart))]+[Container.content(movies)|Container.content(musicvideos)]]
                                    |Window.IsActive(script-script.extendedinfo-DialogInfo.xml)
                                    |[[[Container.content(songs)|Container.content(albums)]+Window.IsActive(MyMusicNav.xml)]|Window.IsActive(MyMusicSongs.xml)]
                                ]">
            <include>PulseBasicVisible</include>
        </animation>
    </include>
    <include name="PulseCdArt">
        <animation type="Conditional" pulse="true" reversible="false"
                   condition="Skin.HasSetting(EnableCdArt)
                                +!String.IsEmpty(ListItem.Thumb)
                                +!ListItem.IsParentFolder
                                +!Skin.HasSetting(plexbmc)
                                +[
                                    [[!String.IsEmpty(ListItem.Art(poster))|!String.IsEmpty(ListItem.Art(discart))]+[Container.content(movies)|Container.content(musicvideos)]]
                                    |Window.IsActive(script-script.extendedinfo-DialogInfo.xml)
                                    |[[[Container.content(songs)|Container.content(albums)]+Window.IsActive(MyMusicNav.xml)]|Window.IsActive(MyMusicSongs.xml)]
                                ]">
            <include>PulseBasicHidden</include>
        </animation>
    </include>
    <include name="PulseClearArt">
        <visible>Skin.HasSetting(EnableClearArt)</visible>
        <animation type="Conditional" pulse="true" reversible="false" condition="Skin.HasSetting(EnableClearLogo)+
                    [
                    [!String.IsEmpty(ListItem.Art(clearlogo)) + ![Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]]]
                    |
                    [!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + [Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]]]
                    ]+[
                    [!String.IsEmpty(ListItem.Art(clearart)) + ![Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]] + ![Window.IsActive(MyMusicSongs.xml)|Window.IsActive(MyMusicNav.xml)]]
                    |
                    [!String.IsEmpty(ListItem.Art(tvshow.clearart)) + [Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]]]
                    |
                    [!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo)) + [Window.IsActive(MyMusicSongs.xml)|Window.IsActive(MyMusicNav.xml)]]
                    ]">
            <effect type="slide" start="0,0" end="0,0" time="1500" delay="3500"/>
            <effect type="fade" start="100" end="0" time="500" delay="3000"/>
        </animation>
    </include>
    <include name="PulseClearLogo">
        <visible>Skin.HasSetting(EnableClearLogo)</visible>
        <animation type="Conditional" pulse="true" reversible="false" condition="Skin.HasSetting(EnableClearArt)+
                    [
                    [!String.IsEmpty(ListItem.Art(clearlogo)) + ![Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]]]
                    |
                    [!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + [Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]]]
                    ]+[
                    [!String.IsEmpty(ListItem.Art(clearart)) + ![Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]] + ![Window.IsActive(MyMusicSongs.xml)|Window.IsActive(MyMusicNav.xml)]]
                    |
                    [!String.IsEmpty(ListItem.Art(tvshow.clearart)) + [Window.IsActive(MyVideoNav.xml)+[Container.Content(episodes)|Container.Content(seasons)]]]
                    |
                    [!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo)) + [Window.IsActive(MyMusicSongs.xml)|Window.IsActive(MyMusicNav.xml)]]
                    ]">
            <effect type="slide" start="0,0" end="0,0" time="1500" delay="3500"/>
            <effect type="fade" start="0" end="100" time="500" delay="3000"/>
        </animation>
    </include>
    <include name="OverlayTransparency">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency80)">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency60)|[
                                    !Skin.HasSetting(OverlayTransparency00)+
                                    !Skin.HasSetting(OverlayTransparency10)+
                                    !Skin.HasSetting(OverlayTransparency20)+
                                    !Skin.HasSetting(OverlayTransparency30)+
                                    !Skin.HasSetting(OverlayTransparency40)+
                                    !Skin.HasSetting(OverlayTransparency50)+
                                    !Skin.HasSetting(OverlayTransparency60)+
                                    !Skin.HasSetting(OverlayTransparency70)+
                                    !Skin.HasSetting(OverlayTransparency80)+
                                    !Skin.HasSetting(OverlayTransparency90)+
                                    !Skin.HasSetting(OverlayTransparency100)
                                    ]">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparency00)">Conditional</animation>
    </include>
    <include name="OverlayTransparencyWhite">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite80)">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyWhite00)|[
                                    !Skin.HasSetting(OverlayTransparencyWhite00)+
                                    !Skin.HasSetting(OverlayTransparencyWhite10)+
                                    !Skin.HasSetting(OverlayTransparencyWhite20)+
                                    !Skin.HasSetting(OverlayTransparencyWhite30)+
                                    !Skin.HasSetting(OverlayTransparencyWhite40)+
                                    !Skin.HasSetting(OverlayTransparencyWhite50)+
                                    !Skin.HasSetting(OverlayTransparencyWhite60)+
                                    !Skin.HasSetting(OverlayTransparencyWhite70)+
                                    !Skin.HasSetting(OverlayTransparencyWhite80)+
                                    !Skin.HasSetting(OverlayTransparencyWhite90)+
                                    !Skin.HasSetting(OverlayTransparencyWhite100)
                                    ]">Conditional</animation>
    </include>
    <include name="OverlayTransparencyBlack">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack80)">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyBlack00)|[
                                    !Skin.HasSetting(OverlayTransparencyBlack00)+
                                    !Skin.HasSetting(OverlayTransparencyBlack10)+
                                    !Skin.HasSetting(OverlayTransparencyBlack20)+
                                    !Skin.HasSetting(OverlayTransparencyBlack30)+
                                    !Skin.HasSetting(OverlayTransparencyBlack40)+
                                    !Skin.HasSetting(OverlayTransparencyBlack50)+
                                    !Skin.HasSetting(OverlayTransparencyBlack60)+
                                    !Skin.HasSetting(OverlayTransparencyBlack70)+
                                    !Skin.HasSetting(OverlayTransparencyBlack80)+
                                    !Skin.HasSetting(OverlayTransparencyBlack90)+
                                    !Skin.HasSetting(OverlayTransparencyBlack100)
                                    ]">Conditional</animation>
    </include>
    <include name="OverlayTransparencyHeader">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader80)|[
                                    !Skin.HasSetting(OverlayTransparencyHeader00)+
                                    !Skin.HasSetting(OverlayTransparencyHeader10)+
                                    !Skin.HasSetting(OverlayTransparencyHeader20)+
                                    !Skin.HasSetting(OverlayTransparencyHeader30)+
                                    !Skin.HasSetting(OverlayTransparencyHeader40)+
                                    !Skin.HasSetting(OverlayTransparencyHeader50)+
                                    !Skin.HasSetting(OverlayTransparencyHeader60)+
                                    !Skin.HasSetting(OverlayTransparencyHeader70)+
                                    !Skin.HasSetting(OverlayTransparencyHeader80)+
                                    !Skin.HasSetting(OverlayTransparencyHeader90)+
                                    !Skin.HasSetting(OverlayTransparencyHeader100)
                                    ]">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyHeader00)">Conditional</animation>
    </include>
    <include name="OverlayTransparencyTopbar">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar80)">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar50)|[
                                    !Skin.HasSetting(OverlayTransparencyTopbar00)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar10)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar20)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar30)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar40)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar50)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar60)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar70)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar80)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar90)+
                                    !Skin.HasSetting(OverlayTransparencyTopbar100)
                                    ]">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyTopbar00)">Conditional</animation>
    </include>
    <include name="OverlayTransparencyLeftMenu">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu80)|[
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu00)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu10)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu20)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu30)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu40)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu50)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu60)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu70)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu80)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu90)+
                                    !Skin.HasSetting(OverlayTransparencyLeftMenu100)
                                    ]">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyLeftMenu00)">Conditional</animation>
    </include>
    <include name="OverlayTransparencyDialog">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog90)|[
                                    !Skin.HasSetting(OverlayTransparencyDialog00)+
                                    !Skin.HasSetting(OverlayTransparencyDialog10)+
                                    !Skin.HasSetting(OverlayTransparencyDialog20)+
                                    !Skin.HasSetting(OverlayTransparencyDialog30)+
                                    !Skin.HasSetting(OverlayTransparencyDialog40)+
                                    !Skin.HasSetting(OverlayTransparencyDialog50)+
                                    !Skin.HasSetting(OverlayTransparencyDialog60)+
                                    !Skin.HasSetting(OverlayTransparencyDialog70)+
                                    !Skin.HasSetting(OverlayTransparencyDialog80)+
                                    !Skin.HasSetting(OverlayTransparencyDialog90)+
                                    !Skin.HasSetting(OverlayTransparencyDialog100)
                                    ]">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog80)">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyDialog00)">Conditional</animation>
    </include>
    <include name="OverlayTransparencyOSD">
        <animation effect="fade" start="90" end="90" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD90)">Conditional</animation>
        <animation effect="fade" start="80" end="80" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD80)|[
                                    !Skin.HasSetting(OverlayTransparencyOSD00)+
                                    !Skin.HasSetting(OverlayTransparencyOSD10)+
                                    !Skin.HasSetting(OverlayTransparencyOSD20)+
                                    !Skin.HasSetting(OverlayTransparencyOSD30)+
                                    !Skin.HasSetting(OverlayTransparencyOSD40)+
                                    !Skin.HasSetting(OverlayTransparencyOSD50)+
                                    !Skin.HasSetting(OverlayTransparencyOSD60)+
                                    !Skin.HasSetting(OverlayTransparencyOSD70)+
                                    !Skin.HasSetting(OverlayTransparencyOSD80)+
                                    !Skin.HasSetting(OverlayTransparencyOSD90)+
                                    !Skin.HasSetting(OverlayTransparencyOSD100)
                                    ]">Conditional</animation>
        <animation effect="fade" start="70" end="70" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD70)">Conditional</animation>
        <animation effect="fade" start="60" end="60" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD60)">Conditional</animation>
        <animation effect="fade" start="50" end="50" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD50)">Conditional</animation>
        <animation effect="fade" start="40" end="40" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD40)">Conditional</animation>
        <animation effect="fade" start="30" end="30" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD30)">Conditional</animation>
        <animation effect="fade" start="20" end="20" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD20)">Conditional</animation>
        <animation effect="fade" start="10" end="10" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD10)">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0" reversible="false" condition="skin.hassetting(OverlayTransparencyOSD00)">Conditional</animation>
    </include>
    <include name="NoFocusedIcon">
        <animation effect="fade" start="100" end="50" time="100" reversible="false" condition="true">Conditional</animation>
    </include>
    <include name="NoFocusedThumb">
        <animation effect="fade" start="100" end="80" time="100" reversible="false" condition="true">Conditional</animation>
    </include>
    <include name="FacadeFocusAnimation">
        <animation type="Conditional" reversible="true"
                   condition="[
                   Skin.HasSetting(EnableUpAnimNavListViews)+[
                   [Control.isvisible(50)+Container(50).Row(0)+Container(50).Scrolling]|
                   [Control.isvisible(52)+Container(52).Row(0)+Container(52).Scrolling]|
                   [Control.isvisible(55)+Container(55).Row(0)+Container(55).Scrolling]|
                   [Control.isvisible(56)+Container(56).Row(0)+Container(56).Scrolling]|
                   [Window.IsVisible(DialogFavourites.xml)+Control.isvisible(450)+Container(450).Row(0)+Container(450).Scrolling]|
                   [Window.IsVisible(script-script.extendedinfo-VideoList.xml)+Control.isvisible(500)+Container(500).Row(0)+Container(500).Scrolling]|
                   [Window.IsVisible(FileManager.xml)+[[Control.isvisible(20)+Container(20).Row(0)+Container(20).Scrolling]|[Control.isvisible(21)+Container(21).Row(0)+Container(21).Scrolling]]]|
                   [Window.IsVisible(MyPVRGuide.xml)+[[Control.isvisible(10)+Container(10).Row(0)+Container(10).Scrolling]|[Control.isvisible(11)+Container(11).Row(0)+Container(11).Scrolling]|[Control.isvisible(12)+Container(12).Row(0)+Container(12).Scrolling]|[Control.isvisible(13)+Container(13).Row(0)+Container(13).Scrolling]]]
                   ]]
                   |
                   [!ControlGroup(9000).HasFocus+
                   !Control.HasFocus(8999)+
                   !Control.HasFocus(9060)+
                   ![
                   ControlGroup(505052).HasFocus+
                   !ControlGroup(9900).HasFocus+
                   !ControlGroup(9901).HasFocus+
                   !Control.HasFocus(8997)+
                   !Control.HasFocus(505051)
                   ]]">
            <effect type="slide" start="0,0" end="0,186" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="FacadeFocusCustomTransparencyOverlayAnimation">
        <animation type="Conditional" reversible="true"
                   condition="control.hasfocus(8998)|control.hasfocus(8997)">
            <effect type="slide" start="0,0" end="0,186" time="150" delay="0" tween="circle" easing="inout"/>
        </animation>
    </include>
    <include name="unfocusAnimation">
        <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
    </include>
    <include name="unfocusConditionalAnimation">
        <animation effect="fade" start="100" end="50" time="0" condition="$PARAM[condition]">Conditional</animation>
    </include>
    <include name="LeftMenuHasFocusAnimation">
        <animation effect="slide" tween="circle" easing="inout" time="150" start="0,0" end="660,0" condition="$EXP[LeftMenuHasFocus]">Conditional</animation>
    </include>
</includes>
